; pgbouncer.ini 示例文件
; 请根据你的实际需求修改这个文件

; 数据库部分，定义了要连接的数据库和连接字符串
[databases]
; 数据库名 = 连接字符串
; 连接字符串可以包含 host, port, user, password, dbname 等参数
; 你也可以使用 * 作为通配符，匹配任意数据库名
; 例如：
mydb = host=127.0.0.1 port=5432 user=postgres password=secret dbname=mydb
* = host=127.0.0.1 port=5432 user=postgres password=secret

; pgbouncer 部分，定义了 pgbouncer 的运行参数
[pgbouncer]
; 日志文件，如果要启用守护进程模式 (-d)，则必须设置
logfile = /var/log/pgbouncer/pgbouncer.log
; PID 文件，如果要启用守护进程模式 (-d)，则必须设置
pidfile = /var/run/pgbouncer/pgbouncer.pid
; 监听地址，可以是 IP 地址或者主机名，也可以是 * 表示监听所有地址
; 如果不设置，则只接受 Unix 套接字连接
listen_addr = *
; 监听端口，适用于 TCP 和 Unix 套接字
listen_port = 6432
; Unix 套接字的目录，如果设置为空字符串，则禁用 Unix 套接字
; 如果以 @ 开头，则使用抽象命名空间的 Unix 套接字
unix_socket_dir = /tmp
; Unix 套接字的模式，忽略抽象命名空间的套接字
unix_socket_mode = 0777
; Unix 套接字的组名，忽略抽象命名空间的套接字
unix_socket_group = postgres
; 用户名，如果设置，则在启动后切换到该用户
; 只有在以 root 用户或者该用户启动时才有效
user = postgres
; 连接池模式，决定了何时释放服务器连接
; session: 客户端断开后释放连接，这是默认值
; transaction: 事务结束后释放连接
; statement: 查询结束后释放连接，不允许跨语句的事务
pool_mode = session
; 允许的最大客户端连接数，如果增加这个值，可能需要同时增加操作系统的文件描述符限制
max_client_conn = 100
; 每个数据库/用户对的最大服务器连接数
; 如果 pool_mode 为 session 或者 transaction，则这个值也是每个客户端的最大服务器连接数
; 如果 pool_mode 为 statement，则这个值是每个数据库/用户对的最大服务器连接数
default_pool_size = 20
; 服务器连接的最大寿命，超过这个时间后，连接将被关闭
; 如果设置为 0，则不限制连接寿命
server_lifetime = 3600
; 服务器连接的最大空闲时间，超过这个时间后，连接将被关闭
; 如果设置为 0，则不限制空闲时间
server_idle_timeout = 600
; 客户端连接的最大空闲时间，超过这个时间后，连接将被关闭
; 如果设置为 0，则不限制空闲时间
client_idle_timeout = 0
; 客户端连接的登录超时时间，超过这个时间后，连接将被关闭
client_login_timeout = 60
; 自动创建的数据库条目（通过 "*"）的最大空闲时间，超过这个时间后，条目将被清理
autodb_idle_timeout = 3600
; 处于 "IDLE in transaction" 状态的连接的最大时间，超过这个时间后，连接将被关闭
; 如果设置为 0，则不限制这个时间
idle_transaction_timeout = 0
; SUSPEND/-R 等待缓冲区刷新的最大时间，超过这个时间后，连接将被关闭
suspend_timeout = 10

; 用户部分，定义了允许连接到 pgbouncer 的用户和密码
[users]
; 用户名 = 密码
; 例如：
postgres = md5a8f9fba8d8e9d8e9d8e9d8e9d8e9d8
admin = somepassword
